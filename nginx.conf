user nginx;
worker_processes auto;
error_log /dev/stdout;
pid /run/nginx.pid;

load_module modules/ngx_http_headers_more_filter_module.so;
load_module modules/ndk_http_module.so;
load_module modules/ngx_http_lua_module.so;

include /usr/lib/nginx/modules/*.conf;
events {
    worker_connections 1024;
}

http {
    server_tokens off;
    more_clear_headers Server;
    include /etc/nginx/mime.types;
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
    access_log  /dev/stdout  main;
    error_log   /dev/stdout;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 4096;
    proxy_cache_path /dev/shm levels=1 keys_zone=jwk:1m max_size=10m;

    server {
        listen 80 default_server;
        return 301 https://$host$request_uri;
    }

    # see https://github.com/GerritForge/docker-registry/blob/master/docs/authentication.md
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        server_name _;

        sendfile                  on;
        gzip                      on;
        gzip_proxied              no-cache no-store private expired auth;
        ssl_certificate           "/etc/nginx/certs/crt$server_name.pem";
        ssl_certificate_key       "/etc/nginx/certs/key$server_name.pem";
        ssl_session_cache         shared:SSL:1m;
        ssl_session_timeout       10m;
        ssl_protocols             TLSv1.3;
        ssl_ciphers               ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
        ssl_prefer_server_ciphers on;
        tcp_nodelay               on;
        client_max_body_size      0;
        ignore_invalid_headers    off;
        chunked_transfer_encoding on;

        resolver 127.0.0.11 ipv6=off valid=3s;

        location /v2/ {
            set $backend_host "registry:5000";
            # Do not allow connections from docker 1.5 and earlier
            # docker pre-1.6.0 did not properly set the user agent on ping, catch "Go *" user agents
            if ($http_user_agent ~ "^(docker\/1\.(3|4|5(?!\.[0-9]-dev))|Go ).*\$" ) {
              return 404;
            }

            # To add basic authentication to v2 use auth_basic setting plus add_header
            auth_basic "registry";
            auth_basic_user_file /auth/htpasswd;
            add_header 'Docker-Distribution-Api-Version' 'registry/2.0' always;

            proxy_pass                          https://$backend_host;
            proxy_set_header  Host              $http_host;   # required for docker client's sake
            proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
            proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
            proxy_set_header  X-Forwarded-Proto $scheme;
            proxy_intercept_errors     on;
            proxy_pass_request_body    off;
            proxy_redirect             off;
            proxy_connect_timeout      5;
            proxy_send_timeout         10;
            proxy_read_timeout         10;
            proxy_buffering            off;
            proxy_request_buffering    off;
        }

        location = / {
            default_type "";
            return 404;
        }
    }
}
